# 3.3 :ACQuire Commands
["3.3.1 :ACQuire:AVERages"]
Syntax = ":ACQuire:AVERages <count> :ACQuire:AVERages?"
Description = "Sets or queries the number of averages in the average acquisition mode."
Remarks = "• You can send the :ACQuire:TYPE command to set the acquisition mode. • In the average acquisition mode, greater number of averages can lower the noise and increase the vertical resolution; but will also slow the response of the displayed waveform to the waveform changes. • The number of averages must be in the Nth power of 2. When the value is not in the Nth power of 2, a value that is smaller than the one you input and the closest to the N power-of-2 increments will be input automatically. For example, if you input 9 with the numeric keypad, the average count will be input 8 automatically."
"Return Format" = "The query returns an integer ranging from 2 to 65536."
Example = ":ACQuire:AVERages 128    /*Sets the average times to 128.*/ :ACQuire:AVERages?       /*The query returns 128.*/"
Class = "Acquire"
Function = "set_average_count"
Command = ":ACQuire:AVERages"
Input_Min = "2"
Input_Max = "65536"
Input_Values = "power_of_2"
Is_Query = "Yes"

["3.3.2 :ACQuire:MDEPth"]
Syntax = ":ACQuire:MDEPth <mdep> :ACQuire:MDEPth?"
Description = "Sets or queries the memory depth of the oscilloscope (i.e., the number of waveform points that can be stored through the sampling in a single trigger). The default unit is pts."
Remarks = "When you select the \"Auto\" mode, the oscilloscope selects the memory depth automatically according to the current sample rate. • When only one of the four channels is enabled: - For DHO800 series, the available memory depths are AUTO, 1k, 10k, 100k, 1M, 10M, and 25M. - For DHO900 series, the available memory depths are AUTO, 1k, 10k, 100k, 1M, 10M, 25M, and 50M. • When any two of the four channels are enabled: 21 - For DHO800 series, the available memory depths are AUTO, 1k, 10k, 100k, 1M, and 10M. - For DHO900 series, the available memory depths are AUTO, 1k, 10k, 100k, 1M, 10M, and 25M. • When three channels or four channels are enabled (only applicable to four- channel models): - For DHO800 series, the available memory depths are AUTO, 1k, 10k, 100k, and 1M. - For DHO900 series, the available memory depths are AUTO, 1k, 10k, 100k, 1M, and 10M. Modifying the memory depth will affect the sample rate. To query the current sample rate, run the :ACQuire:SRATe? command."
"Return Format" = "The query returns the memory depth in scientific notation."
Example = ":ACQuire:MDEPth 1M           /*Sets the memory depth to 1M.*/ :ACQuire:MDEPth?            /*The query returns 1.000E+6.*/"
Class = "Acquire"
Function = "set_memory_depth"
Command = ":ACQuire:MDEPth"
Input_Min = "1k"
Input_Max = "50M"
Input_Values = "{AUTO, 1k, 10k, 100k, 1M, 10M, 25M, 50M}"
Is_Query = "Yes"

["3.3.3 :ACQuire:MEMDepth?"]
Syntax = ":ACQuire:MEMDepth?"
Description = "Queries the memory depth of the oscilloscope."
Remarks = "This command exists for backwards compatibility. Use the command :ACQuire:MDEPth."
"Return Format" = "The query returns the memory depth in strings."
Example = ":ACQuire:MDEPth?   /*The query returns 1.000E+6.*/"
Class = "Acquire"
Function = "query_memory_depth"
Command = ":ACQuire:MEMDepth?"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "N/A"
Is_Query = "Yes"

["3.3.4 :ACQuire:TYPE"]
Syntax = ":ACQuire:TYPE <type> :ACQuire:TYPE?"
Description = "Sets or queries the acquisition mode of the oscilloscope."
Remarks = "• NORMal: In this mode, the oscilloscope samples the signal at a specified fixed time interval to rebuild the waveform. This mode produces the best display for most waveforms. • AVERages: In this mode, the oscilloscope averages the waveforms from multiple samples to reduce the random noise of the input signal and improve the vertical resolution. A greater number of averages lowers the noise and increases the vertical resolution. • PEAK: indicates the peak detection. In this mode, the oscilloscope samples the maximum and minimum value of the signal at the fixed sampling interval to acquire the signal envelope or the narrow pulses that might be lost. This mode prevents signal aliasing at the expense of exaggerating the noise. • ULTRa (UltraAcquire): divides the oscilloscope's memory into segments and fills a memory segment for each individual trigger event. In this mode, it provides a high waveform capture rate and minimizes the dead time between trigger events."
"Return Format" = "The query returns NORM, PEAK, AVER, or ULTR."
Example = ":ACQuire:TYPE AVERages     /*Sets the acquisition mode to Average.*/ :ACQuire:TYPE?             /*The query returns AVER.*/"
Class = "Acquire"
Function = "set_acquisition_type"
Command = ":ACQuire:TYPE"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{NORMal, PEAK, AVERages, ULTRa}"
Is_Query = "Yes"

["3.3.5 :ACQuire:SRATe?"]
Syntax = ":ACQuire:SRATe?"
Description = "Queries the current sample rate. The default unit is Sa/s."
Remarks = "• Sample rate indicates the frequency of the signal sampling, i.e., the number of waveform points sampled per second. • The sample rate and memory depth will change accordingly in accordance with the horizontal time base. To set the memory depth, send the :ACQuire:MDEPth command. To set the horizontal time base, send the :TIMebase[:MAIN]:SCALe command."
"Return Format" = "The query returns the sample rate in scientific notation."
Example = ":ACQuire:SRATe?   /*The query returns 1.00000E+6.*/"
Class = "Acquire"
Function = "query_sample_rate"
Command = ":ACQuire:SRATe?"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "float"
Is_Query = "Yes"

["3.3.6 :ACQuire:ULTRa:MODE"]
Syntax = ":ACQuire:ULTRa:MODE <mode> :ACQuire:ULTRa:MODE?"
Description = "Sets or queries the display mode of Ultra Acquire."
Remarks = "• ADJacent: indicates the adjacent display. Waveform segments are shown in adjacent display, with each segment shown next to the previous segment. In this mode, a maximum of 100 frames of waveforms can be displayed on the screen at a time. • OVERlay: indicates the overlay display. All the captured waveform segments are overwritten to display as one single segment of the waveform. In this mode, a maximum of 100 frames of waveforms can be displayed on the screen at a time. • WATerfall: indicates the waterfall display. It displays the captured waveform segments in a cascaded display order. In this mode, a maximum of 100 frames of waveforms can be displayed on the screen at a time. • PERSpective: indicates the perspective display. The waveform segments are displayed in the ladder-like form, with each segment being arranged above another with a certain perspective (angle), moving up like a rising slope. In this mode, a maximum of 100 frames of waveforms can be displayed on the screen at a time. • MOSaic: indicates the mosaic display. The whole waveform view is divided into several blocks, and each waveform segment is displayed in each block in sequence. In this mode, a maximum of 80 frames of waveforms can be displayed on the screen at a time."
"Return Format" = "The query returns ADJ, OVER, WAT, PERS, or MOS."
Example = ":ACQuire:ULTRa:MODE ADJacent    /*Sets the Ultra Acquire display mode to ADJacent.*/ :ACQuire:ULTRa:MODE?            /*The query returns ADJ.*/"
Class = "Acquire"
Function = "set_ultra_acquire_mode"
Command = ":ACQuire:ULTRa:MODE"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{ADJacent, OVERlay, WATerfall, PERSpective, MOSaic}"
Is_Query = "Yes"

["3.3.7 :ACQuire:ULTRa:TIMeout"]
Syntax = ":ACQuire:ULTRa:TIMeout <tmo> :ACQuire:ULTRa:TIMeout?"
Description = "Sets or queries the timeout value of Ultra Acquire."
Remarks = "N/A"
"Return Format" = "The query returns a real number in scientific notation."
Example = ":ACQuire:ULTRa:TIMeout 0.1    /*Sets the Ultra Acquire timeout value to 0.1 s.*/ :ACQuire:ULTRa:TIMeout?            /*The query returns 1E-1.*/"
Class = "Acquire"
Function = "set_ultra_acquire_timeout"
Command = ":ACQuire:ULTRa:TIMeout"
Input_Min = "1 us"
Input_Max = "1 s"
Input_Values = "float"
Is_Query = "Yes"

["3.3.8 :ACQuire:ULTRa:MAXFrame"]
Syntax = ":ACQuire:ULTRa:MAXFrame <frame> :ACQuire:ULTRa:MAXFrame? :BUS<n>:MODE <mode> :BUS<n>:MODE? :BUS<n>:DISPlay <bool> :BUS<n>:DISPlay? 27"
Description = "Sets or queries the maximum number of frames that can be set for Ultra Acquire sampling mode. Sets or queries the decoding type of the specified decoding bus."
Remarks = "N/A 26 Only the DHO900 series supports LIN and CAN decodings."
"Return Format" = "The query returns the maximum number of frames in integer. The query returns PAR, RS232, SPI, IIC, LIN, or CAN."
Example = ":ACQuire:ULTRa:MAXFrame 100    /*Sets the maximum number of frames to 100.*/ :ACQuire:ULTRa:MAXFrame?            /*The query returns 100.*/ 3.4 :BUS<n> Commands The :BUS<n> commands are used to execute the decoding-related settings and operations. 3.4.1 :BUS<n>:MODE :BUS1:MODE SPI    /*Sets the decoding type to SPI.*/ :BUS1:MODE?       /*The query returns SPI.*/ 3.4.2 :BUS<n>:DISPlay"
Class = "Acquire"
Function = "set_ultra_acquire_max_frames"
Command = ":ACQuire:ULTRa:MAXFrame"
Input_Min = "1"
Input_Max = "100"
Input_Values = "integer"
Is_Query = "Yes"
["3.3.1 :ACQuire:AVERages".Parameter]
Name = "<count>"
Type = "Integer"
Default = "2"
Range = "2n(n is an integer, and its range is from 1 to 16)."

["3.3.2 :ACQuire:MDEPth".Parameter]
Name = "<mdep>"
Type = "Discrete"
Default = "10k"
Range = "{AUTO|1k|10k|100k|1M|10M| 25M|50M|1000|10000|100000| 1000000|10000000|25000000| 50000000|1e3|1e4|1e5|1e6|1e7| 2.5e7|5e7}"

["3.3.3 :ACQuire:MEMDepth?".Parameter]
Info = "N/A"

["3.3.4 :ACQuire:TYPE".Parameter]
Name = "<type>"
Type = "Discrete"
Default = "NORMal"
Range = "{NORMal|PEAK|AVERages| ULTRa}"

["3.3.5 :ACQuire:SRATe?".Parameter]
Info = "N/A"

["3.3.6 :ACQuire:ULTRa:MODE".Parameter]
Name = "<mode>"
Type = "Discrete"
Default = "-"
Range = "{ADJacent|OVERlay|WATerfall| PERSpective|MOSaic}"

["3.3.7 :ACQuire:ULTRa:TIMeout".Parameter]
Name = "<tmo>"
Type = "Real"
Default = "ms"
Range = "1 us to 1 s 1.00"

["3.3.8 :ACQuire:ULTRa:MAXFrame".Parameter]
Name = "<frame>"
Type = "Integer"
Default = "PARallel"
Range = "1 to the maximum number of frames - Name Type Range Default <n> Discrete {1|2|3|4} - <mode> Discrete {PARallel|RS232|SPI|IIC|LIN|CAN}"
