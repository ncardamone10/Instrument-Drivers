# 3.4 :BUSn Commands

["3.4.1 :BUS<n>:MODE"]
Syntax = ":BUS<n>:MODE <mode> :BUS<n>:MODE?"
Description = "Sets or queries the decoding type of the specified decoding bus."
Remarks = "Only the DHO900 series supports LIN and CAN decodings."
Return_Format = "The query returns PAR, RS232, SPI, IIC, LIN, or CAN."
Example = ":BUS1:MODE SPI    /*Sets the decoding type to SPI.*/ :BUS1:MODE?       /*Returns SPI.*/"
Class = "Bus"
Function = "mode"
Command = ":BUS<n>:MODE"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{PAR|RS232|SPI|IIC|LIN|CAN}"
Is_Query = "True"

["3.4.2 :BUS<n>:DISPlay"]
Syntax = ":BUS<n>:DISPlay <bool> :BUS<n>:DISPlay?"
Description = "Enables or disables the specified decoding bus; or queries its display status."
Remarks = "N/A"
Return_Format = "The query returns 1 or 0."
Example = ":BUS1:DISPlay ON    /*Enables the decoding bus.*/ :BUS1:DISPlay?       /*Returns 1.*/"
Class = "Bus"
Function = "display"
Command = ":BUS<n>:DISPlay"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "Boolean"
Is_Query = "True"

["3.4.3 :BUS<n>:FORMat"]
Syntax = ":BUS<n>:FORMat <format> :BUS<n>:FORMat?"
Description = "Sets or queries the format of decoding data on the specified bus."
Remarks = "Options: Hex (HEX), ASCII (ASC), Decimal (DEC), or Binary (BIN)."
Return_Format = "The query returns HEX, ASC, DEC, or BIN."
Example = ":BUS1:FORMat HEX    /*Sets format to HEX.*/ :BUS1:FORMat?       /*Returns HEX.*/"
Class = "Bus"
Function = "format"
Command = ":BUS<n>:FORMat"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{HEX|ASC|DEC|BIN}"
Is_Query = "True"

["3.4.4 :BUS<n>:EVENt"]
Syntax = ":BUS<n>:EVENt <bool> :BUS<n>:EVENt?"
Description = "Enables or disables the event table of the specified decoding bus; or queries its status."
Remarks = "Before using, ensure the bus is enabled."
Return_Format = "The query returns 1 or 0."
Example = ":BUS1:EVENt ON    /*Enables event table.*/ :BUS1:EVENt?      /*Returns 1.*/"
Class = "Bus"
Function = "event_table"
Command = ":BUS<n>:EVENt"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "Boolean"
Is_Query = "True"

["3.4.5 :BUS<n>:LABel"]
Syntax = ":BUS<n>:LABel <bool> :BUS<n>:LABel?"
Description = "Enables or disables the label display of the specified decoding bus; or queries its status."
Remarks = "Before using, ensure the bus is enabled."
Return_Format = "The query returns 1 or 0."
Example = ":BUS1:LABel ON  /*Enables label display.*/ :BUS1:LABel?      /*Returns 1.*/"
Class = "Bus"
Function = "label"
Command = ":BUS<n>:LABel"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "Boolean"
Is_Query = "True"

["3.4.6 :BUS<n>:DATA?"]
Syntax = ":BUS<n>:DATA?"
Description = "Reads the data from the decoding event table."
Remarks = "N/A"
Return_Format = "Returns the decoding event table data (see detailed format in remarks)."
Example = "N/A"
Class = "Bus"
Function = "data_read"
Command = ":BUS<n>:DATA?"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "N/A"
Is_Query = "True"

["3.4.7 :BUS<n>:EEXPort"]
Syntax = ":BUS<n>:EEXPort <path>"
Description = "Exports the decoding event table data to a CSV file."
Remarks = "Path includes file location and filename (with suffix). Existing file will be overwritten."
Return_Format = "N/A"
Example = ":BUS1:EEXPort C:/123.csv    /*Exports data to C:/123.csv.*/"
Class = "Bus"
Function = "export"
Command = ":BUS<n>:EEXPort"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "ASCII"
Is_Query = "False"

["3.4.8 :BUS<n>:POSition"]
Syntax = ":BUS<n>:POSition <pos> :BUS<n>:POSition?"
Description = "Sets or queries the vertical position of the bus on the screen."
Remarks = "N/A"
Return_Format = "Returns an integer from -250 to 250."
Example = ":BUS1:POSition 200    /*Sets vertical position to 200.*/ :BUS1:POSition?       /*Returns 200.*/"
Class = "Bus"
Function = "position"
Command = ":BUS<n>:POSition"
Input_Min = "-250"
Input_Max = "250"
Input_Values = "Integer"
Is_Query = "True"

["3.4.9 :BUS<n>:THReshold"]
Syntax = ":BUS<n>:THReshold <value>,<type> :BUS<n>:THReshold? <type>"
Description = "Sets or queries the threshold for the specified decoding source on the bus."
Remarks = "For vertical scale and offset, refer to the channel commands."
Return_Format = "Returns the threshold in scientific notation."
Example = ":BUS1:THReshold 2.4,PAL     /*Sets threshold for Parallel decoding to 2.4 V.*/ :BUS1:THReshold? PAL       /*Returns 2.400000E0.*/"
Class = "Bus"
Function = "threshold"
Command = ":BUS<n>:THReshold"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "N/A"
Is_Query = "True"

["3.4.10 :BUS<n>:PARallel"]
Syntax = ":BUS<n>:PARallel:BUS <source> :BUS<n>:PARallel:BUS? :BUS<n>:PARallel:CLK <source> :BUS<n>:PARallel:CLK? :BUS<n>:PARallel:SLOPe <slope> :BUS<n>:PARallel:SLOPe? :BUS<n>:PARallel:WIDTh <wid> :BUS<n>:PARallel:WIDTh? :BUS<n>:PARallel:BITX <bit> :BUS<n>:PARallel:BITX? :BUS<n>:PARallel:SOURce <src> :BUS<n>:PARallel:SOURce? :BUS<n>:PARallel:ENDian <endian> :BUS<n>:PARallel:ENDian? :BUS<n>:PARallel:POLarity <pol> :BUS<n>:PARallel:POLarity?"
Description = "Sets or queries various parameters for Parallel decoding on the bus."
Remarks = "Only valid when the bus source is set to User; D0-D15 are available only on DHO900 series. For detailed bit and source settings, use the subcommands."
Return_Format = "Returns decoding parameters based on subcommands."
Example = ":BUS1:PARallel:BUS CHANnel1    /*Sets Parallel bus source to CHANnel1.*/ :BUS1:PARallel:BUS?       /*Returns CHAN1.*/"
Class = "Bus.Parallel"
Function = "configure"
Command = ":BUS<n>:PARallel"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "N/A"
Is_Query = "True"

["3.4.10.1 :BUS<n>:PARallel:BUS"]
Syntax = ":BUS<n>:PARallel:BUS <source> :BUS<n>:PARallel:BUS?"
Description = "Sets or queries the current source of the Parallel decoding bus."
Remarks = "Only DHO900 series supports digital channels D0-D15."
Return_Format = "Returns {D7D0|D15D8|D15D0|D0D7|D8D15|D0D15|CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|USER}."
Example = ":BUS1:PARallel:BUS CHANnel1    /*Sets source to CHANnel1.*/ :BUS1:PARallel:BUS?       /*Returns CHAN1.*/"
Class = "Bus.Parallel"
Function = "source"
Command = ":BUS<n>:PARallel:BUS"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{D7D0|D15D8|D15D0|D0D7|D8D15|D0D15|CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|USER}"
Is_Query = "True"

["3.4.10.2 :BUS<n>:PARallel:CLK"]
Syntax = ":BUS<n>:PARallel:CLK <source> :BUS<n>:PARallel:CLK?"
Description = "Sets or queries the clock source for Parallel decoding."
Remarks = "Only DHO900 series supports digital channels D0-D15."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|OFF} or D0-D15."
Example = ":BUS1:PARallel:CLK CHANnel2    /*Sets clock source to CHANnel2.*/ :BUS1:PARallel:CLK?       /*Returns CHAN2.*/"
Class = "Bus.Parallel"
Function = "clock"
Command = ":BUS<n>:PARallel:CLK"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|OFF}"
Is_Query = "True"

["3.4.10.3 :BUS<n>:PARallel:SLOPe"]
Syntax = ":BUS<n>:PARallel:SLOPe <slope> :BUS<n>:PARallel:SLOPe?"
Description = "Sets or queries the clock edge type for sampling in Parallel decoding."
Remarks = "If no clock channel is selected, sampling occurs on data hopping."
Return_Format = "Returns {POS|NEG|BOTH}."
Example = ":BUS1:PARallel:SLOPe BOTH    /*Sets edge type to BOTH.*/ :BUS1:PARallel:SLOPe?       /*Returns BOTH.*/"
Class = "Bus.Parallel"
Function = "slope"
Command = ":BUS<n>:PARallel:SLOPe"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{POS|NEG|BOTH}"
Is_Query = "True"

["3.4.10.4 :BUS<n>:PARallel:WIDTh"]
Syntax = ":BUS<n>:PARallel:WIDTh <wid> :BUS<n>:PARallel:WIDTh? 36"
Description = "Sets or queries the data width (bits per frame) for Parallel decoding."
Remarks = "Valid only when bus source is set to User."
Return_Format = "Returns an integer from 1 to 4."
Example = ":BUS1:PARallel:WIDTh 4    /*Sets data width to 4.*/ :BUS1:PARallel:WIDTh?    /*Returns 4.*/"
Class = "Bus.Parallel"
Function = "data_width"
Command = ":BUS<n>:PARallel:WIDTh"
Input_Min = "1"
Input_Max = "4"
Input_Values = "Integer"
Is_Query = "True"

["3.4.10.5 :BUS<n>:PARallel:BITX"]
Syntax = ":BUS<n>:PARallel:BITX <bit> :BUS<n>:PARallel:BITX?"
Description = "Sets or queries the data bit index for channel source selection."
Remarks = "Valid only when bus source is User; data width is set by :BUS<n>:PARallel:WIDTh."
Return_Format = "Returns the bit index as an integer."
Example = ":BUS1:PARallel:BITX 2    /*Selects bit index 2.*/ :BUS1:PARallel:BITX?    /*Returns 2.*/"
Class = "Bus.Parallel"
Function = "bit"
Command = ":BUS<n>:PARallel:BITX"
Input_Min = "0"
Input_Max = "N/A"
Input_Values = "Integer"
Is_Query = "True"

["3.4.10.6 :BUS<n>:PARallel:SOURce"]
Syntax = ":BUS<n>:PARallel:SOURce <src> :BUS<n>:PARallel:SOURce?"
Description = "Sets or queries the channel source for the selected data bit in Parallel decoding."
Remarks = "Valid only when bus source is User; must use :BUS<n>:PARallel:BITX first. D0-D15 available only for DHO900."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15}."
Example = ":BUS1:PARallel:SOURce CHANnel2    /*Sets source to CHANnel2.*/ :BUS1:PARallel:SOURce?    /*Returns CHAN2.*/"
Class = "Bus.Parallel"
Function = "source_bit"
Command = ":BUS<n>:PARallel:SOURce"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4}"
Is_Query = "True"

["3.4.10.7 :BUS<n>:PARallel:ENDian"]
Syntax = ":BUS<n>:PARallel:ENDian <endian> :BUS<n>:PARallel:ENDian?"
Description = "Sets or queries the endian order for Parallel decoding."
Remarks = "MSB: highest bit first; LSB: lowest bit first."
Return_Format = "Returns {MSB|LSB}."
Example = ":BUS1:PARallel:ENDian LSB    /*Sets endian to LSB.*/ :BUS1:PARallel:ENDian?    /*Returns LSB.*/"
Class = "Bus.Parallel"
Function = "endian"
Command = ":BUS<n>:PARallel:ENDian"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{MSB|LSB}"
Is_Query = "True"

["3.4.10.8 :BUS<n>:PARallel:POLarity"]
Syntax = ":BUS<n>:PARallel:POLarity <pol> :BUS<n>:PARallel:POLarity?"
Description = "Sets or queries the data polarity for Parallel decoding."
Remarks = "NEG for negative; POS for positive."
Return_Format = "Returns {NEG|POS}."
Example = ":BUS1:PARallel:POLarity NEG    /*Sets polarity to NEG.*/ :BUS1:PARallel:POLarity?    /*Returns NEG.*/"
Class = "Bus.Parallel"
Function = "polarity"
Command = ":BUS<n>:PARallel:POLarity"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{NEG|POS}"
Is_Query = "True"

["3.4.11 :BUS<n>:RS232"]
Syntax = ":BUS<n>:RS232:TX <source> :BUS<n>:RS232:TX? :BUS<n>:RS232:RX <source> :BUS<n>:RS232:RX? :BUS<n>:RS232:POLarity <pol> :BUS<n>:RS232:POLarity? :BUS<n>:RS232:PARity <parity> :BUS<n>:RS232:PARity? :BUS<n>:RS232:ENDian <endian> :BUS<n>:RS232:ENDian? :BUS<n>:RS232:BAUD <baud> :BUS<n>:RS232:BAUD? :BUS<n>:RS232:DBITs <bits> :BUS<n>:RS232:DBITs? :BUS<n>:RS232:SBITs <stop bits> :BUS<n>:RS232:SBITs?"
Description = "Sets or queries RS232 decoding parameters (Tx, Rx, polarity, parity, endian, baud rate, data bits, stop bits)."
Remarks = "Tx and Rx sources cannot both be OFF; D0-D15 available only for DHO900."
Return_Format = "Returns values based on the subcommands."
Example = ":BUS1:RS232:TX CHANnel2    /*Sets Tx source to CHANnel2.*/ :BUS1:RS232:TX?    /*Returns CHAN2.*/"
Class = "Bus.RS232"
Function = "configure"
Command = ":BUS<n>:RS232"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "N/A"
Is_Query = "True"

["3.4.11.1 :BUS<n>:RS232:TX"]
Syntax = ":BUS<n>:RS232:TX <source> :BUS<n>:RS232:TX?"
Description = "Sets or queries the Tx source for RS232 decoding."
Remarks = "Tx and Rx cannot both be OFF; D0-D15 available only for DHO900."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|...|D15|OFF}."
Example = ":BUS1:RS232:TX CHANnel2    /*Sets Tx to CHANnel2.*/ :BUS1:RS232:TX?    /*Returns CHAN2.*/"
Class = "Bus.RS232"
Function = "tx"
Command = ":BUS<n>:RS232:TX"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15|OFF}"
Is_Query = "True"

["3.4.11.2 :BUS<n>:RS232:RX"]
Syntax = ":BUS<n>:RS232:RX <source> :BUS<n>:RS232:RX?"
Description = "Sets or queries the Rx source for RS232 decoding."
Remarks = "Tx and Rx cannot both be OFF; D0-D15 available only for DHO900."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|...|D15|OFF}."
Example = ":BUS1:RS232:RX CHANnel2    /*Sets Rx to CHANnel2.*/ :BUS1:RS232:RX?    /*Returns CHAN2.*/"
Class = "Bus.RS232"
Function = "rx"
Command = ":BUS<n>:RS232:RX"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15|OFF}"
Is_Query = "True"

["3.4.11.3 :BUS<n>:RS232:POLarity"]
Syntax = ":BUS<n>:RS232:POLarity <pol> :BUS<n>:RS232:POLarity?"
Description = "Sets or queries the polarity for RS232 decoding."
Remarks = "POS indicates positive polarity; NEG indicates negative polarity."
Return_Format = "Returns {POS|NEG}."
Example = ":BUS1:RS232:POLarity POSitive    /*Sets polarity to POS.*/ :BUS1:RS232:POLarity?    /*Returns POS.*/"
Class = "Bus.RS232"
Function = "polarity"
Command = ":BUS<n>:RS232:POLarity"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{POS|NEG}"
Is_Query = "True"

["3.4.11.4 :BUS<n>:RS232:PARity"]
Syntax = ":BUS<n>:RS232:PARity <parity> :BUS<n>:RS232:PARity?"
Description = "Sets or queries the parity for RS232 decoding."
Remarks = "Options: NONE (no parity), ODD, EVEN."
Return_Format = "Returns {NONE|ODD|EVEN}."
Example = ":BUS1:RS232:PARity ODD    /*Sets parity to ODD.*/ :BUS1:RS232:PARity?    /*Returns ODD.*/"
Class = "Bus.RS232"
Function = "parity"
Command = ":BUS<n>:RS232:PARity"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{NONE|ODD|EVEN}"
Is_Query = "True"

["3.4.11.5 :BUS<n>:RS232:ENDian"]
Syntax = ":BUS<n>:RS232:ENDian <endian> :BUS<n>:RS232:ENDian?"
Description = "Sets or queries the endian order for RS232 decoding."
Remarks = "LSB: least significant bit first; MSB: most significant bit first."
Return_Format = "Returns {LSB|MSB}."
Example = ":BUS1:RS232:ENDian MSB    /*Sets order to MSB.*/ :BUS1:RS232:ENDian?    /*Returns MSB.*/"
Class = "Bus.RS232"
Function = "endian"
Command = ":BUS<n>:RS232:ENDian"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{MSB|LSB}"
Is_Query = "True"

["3.4.11.6 :BUS<n>:RS232:BAUD"]
Syntax = ":BUS<n>:RS232:BAUD <baud> :BUS<n>:RS232:BAUD?"
Description = "Sets or queries the baud rate for RS232 decoding (in bps)."
Remarks = "If using 'M', append 'A' (e.g., 5M becomes 5MA)."
Return_Format = "Returns an integer."
Example = ":BUS1:RS232:BAUD 4800    /*Sets baud rate to 4800 bps.*/ :BUS1:RS232:BAUD?    /*Returns 4800.*/"
Class = "Bus.RS232"
Function = "baud"
Command = ":BUS<n>:RS232:BAUD"
Input_Min = "1"
Input_Max = "20000000"
Input_Values = "Integer"
Is_Query = "True"

["3.4.11.7 :BUS<n>:RS232:DBITs"]
Syntax = ":BUS<n>:RS232:DBITs <bits> :BUS<n>:RS232:DBITs?"
Description = "Sets or queries the number of data bits for RS232 decoding."
Remarks = "Valid range: 5 to 9."
Return_Format = "Returns an integer."
Example = ":BUS1:RS232:DBITs 7    /*Sets data bits to 7.*/ :BUS1:RS232:DBITs?    /*Returns 7.*/"
Class = "Bus.RS232"
Function = "data_bits"
Command = ":BUS<n>:RS232:DBITs"
Input_Min = "5"
Input_Max = "9"
Input_Values = "Integer"
Is_Query = "True"

["3.4.11.8 :BUS<n>:RS232:SBITs"]
Syntax = ":BUS<n>:RS232:SBITs <stop bits> :BUS<n>:RS232:SBITs?"
Description = "Sets or queries the number of stop bits for RS232 decoding."
Remarks = "Valid options: 1, 1.5, or 2."
Return_Format = "Returns {1|1.5|2}."
Example = ":BUS1:RS232:SBITs 2    /*Sets stop bits to 2.*/ :BUS1:RS232:SBITs?    /*Returns 2.*/"
Class = "Bus.RS232"
Function = "stop_bits"
Command = ":BUS<n>:RS232:SBITs"
Input_Min = "1"
Input_Max = "2"
Input_Values = "{1|1.5|2}"
Is_Query = "True"

["3.4.12 :BUS<n>:IIC"]
Syntax = ":BUS<n>:IIC:SCLK:SOURce <source> :BUS<n>:IIC:SCLK:SOURce? :BUS<n>:IIC:SDA:SOURce <source> :BUS<n>:IIC:SDA:SOURce? :BUS<n>:IIC:EXCHange <bool> :BUS<n>:IIC:EXCHange? :BUS<n>:IIC:ADDRess <addr> :BUS<n>:IIC:ADDRess?"
Description = "Sets or queries I2C decoding parameters."
Remarks = "D0-D15 are available only on DHO900 series."
Return_Format = "Returns values based on subcommands."
Example = ":BUS1:IIC:SCLK:SOURce CHANnel2    /*Sets I2C clock source.*/ :BUS1:IIC:SCLK:SOURce?    /*Returns CHAN2.*/"
Class = "Bus.IIC"
Function = "configure"
Command = ":BUS<n>:IIC"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "N/A"
Is_Query = "True"

["3.4.12.1 :BUS<n>:IIC:SCLK:SOURce"]
Syntax = ":BUS<n>:IIC:SCLK:SOURce <source> :BUS<n>:IIC:SCLK:SOURce?"
Description = "Sets or queries the I2C clock source."
Remarks = "D0-D15 are available only on DHO900 series."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|...|D15}."
Example = ":BUS1:IIC:SCLK:SOURce CHANnel2    /*Sets clock source to CHANnel2.*/ :BUS1:IIC:SCLK:SOURce?    /*Returns CHAN2.*/"
Class = "Bus.IIC"
Function = "clock_source"
Command = ":BUS<n>:IIC:SCLK:SOURce"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15}"
Is_Query = "True"

["3.4.12.2 :BUS<n>:IIC:SDA:SOURce"]
Syntax = ":BUS<n>:IIC:SDA:SOURce <source> :BUS<n>:IIC:SDA:SOURce?"
Description = "Sets or queries the I2C data source."
Remarks = "D0-D15 are available only on DHO900 series."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|...|D15}."
Example = ":BUS1:IIC:SDA:SOURce CHANnel2    /*Sets data source to CHANnel2.*/ :BUS1:IIC:SDA:SOURce?    /*Returns CHAN2.*/"
Class = "Bus.IIC"
Function = "data_source"
Command = ":BUS<n>:IIC:SDA:SOURce"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15}"
Is_Query = "True"

["3.4.12.3 :BUS<n>:IIC:EXCHange"]
Syntax = ":BUS<n>:IIC:EXCHange <bool> :BUS<n>:IIC:EXCHange?"
Description = "Sets or queries whether to exchange the I2C clock and data sources."
Remarks = "N/A"
Return_Format = "Returns Boolean."
Example = ":BUS1:IIC:EXCHange ON    /*Exchanges sources.*/ :BUS1:IIC:EXCHange?    /*Returns 1.*/"
Class = "Bus.IIC"
Function = "exchange"
Command = ":BUS<n>:IIC:EXCHange"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "Boolean"
Is_Query = "True"

["3.4.12.4 :BUS<n>:IIC:ADDRess"]
Syntax = ":BUS<n>:IIC:ADDRess <addr> :BUS<n>:IIC:ADDRess?"
Description = "Sets or queries the I2C address mode."
Remarks = "NORM: excludes R/W bit; RW: includes R/W bit."
Return_Format = "Returns {NORM|RW}."
Example = ":BUS1:IIC:ADDRess RW    /*Sets address mode to RW.*/ :BUS1:IIC:ADDRess?    /*Returns RW.*/"
Class = "Bus.IIC"
Function = "address_mode"
Command = ":BUS<n>:IIC:ADDRess"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{NORM|RW}"
Is_Query = "True"

["3.4.13 :BUS<n>:SPI"]
Syntax = ":BUS<n>:SPI:SCLK:SOURce <source> :BUS<n>:SPI:SCLK:SOURce? :BUS<n>:SPI:SCLK:SLOPe <slope> :BUS<n>:SPI:SCLK:SLOPe? :BUS<n>:SPI:MISO:SOURce <source> :BUS<n>:SPI:MISO:SOURce? :BUS<n>:SPI:MOSI:SOURce <source> :BUS<n>:SPI:MOSI:SOURce? :BUS<n>:SPI:POLarity <polarity> :BUS<n>:SPI:POLarity? :BUS<n>:SPI:MISO:POLarity <polarity> :BUS<n>:SPI:MISO:POLarity? :BUS<n>:SPI:MOSI:POLarity <polarity> :BUS<n>:SPI:MOSI:POLarity? :BUS<n>:SPI:DBITs <width> :BUS<n>:SPI:DBITs? :BUS<n>:SPI:ENDian <endian> :BUS<n>:SPI:ENDian? :BUS<n>:SPI:MODE <mode> :BUS<n>:SPI:MODE? :BUS<n>:SPI:TIMeout:TIME <time> :BUS<n>:SPI:TIMeout:TIME? :BUS<n>:SPI:SS:SOURce <source> :BUS<n>:SPI:SS:SOURce? :BUS<n>:SPI:SS:POLarity <polarity> :BUS<n>:SPI:SS:POLarity? :BUS<n>:CAN:SOURce <source> :BUS<n>:CAN:SOURce? :BUS<n>:CAN:STYPe <stype> :BUS<n>:CAN:STYPe? :BUS<n>:CAN:BAUD <baud> :BUS<n>:CAN:BAUD? :BUS<n>:CAN:SPOint <spoint> :BUS<n>:CAN:SPOint? :BUS<n>:LIN:PARity <bool> :BUS<n>:LIN:PARity? :BUS<n>:LIN:SOURce <source> :BUS<n>:LIN:SOURce? :BUS<n>:LIN:STANdard <value> :BUS<n>:LIN:STANdard?"
Description = "Sets or queries various SPI, CAN, and LIN decoding parameters on the specified bus."
Remarks = "See individual subcommands for details. D0-D15 are available only for DHO900 series."
Return_Format = "Returns values based on subcommands."
Example = ":BUS1:SPI:SCLK:SOURce CHANnel2    /*Sets SPI clock source.*/"
Class = "Bus"
Function = "configure"
Command = ":BUS<n>:SPI"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "N/A"
Is_Query = "True"

["3.4.13.1 :BUS<n>:SPI:SCLK:SOURce"]
Syntax = ":BUS<n>:SPI:SCLK:SOURce <source> :BUS<n>:SPI:SCLK:SOURce?"
Description = "Sets or queries the SPI clock source."
Remarks = "D0-D15 are only available for DHO900 series."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|...|D15}."
Example = ":BUS1:SPI:SCLK:SOURce CHANnel2    /*Sets clock source to CHANnel2.*/"
Class = "Bus.SPI"
Function = "clock_source"
Command = ":BUS<n>:SPI:SCLK:SOURce"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15}"
Is_Query = "True"

["3.4.13.2 :BUS<n>:SPI:SCLK:SLOPe"]
Syntax = ":BUS<n>:SPI:SCLK:SLOPe <slope> :BUS<n>:SPI:SCLK:SLOPe?"
Description = "Sets or queries the SPI clock edge type."
Remarks = "Options: POS for positive edge; NEG for negative edge."
Return_Format = "Returns {POS|NEG}."
Example = ":BUS1:SPI:SCLK:SLOPe NEG    /*Sets clock edge to NEG.*/"
Class = "Bus.SPI"
Function = "clock_edge"
Command = ":BUS<n>:SPI:SCLK:SLOPe"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{POS|NEG}"
Is_Query = "True"

["3.4.13.3 :BUS<n>:SPI:MISO:SOURce"]
Syntax = ":BUS<n>:SPI:MISO:SOURce <source> :BUS<n>:SPI:MISO:SOURce?"
Description = "Sets or queries the MISO source for SPI decoding."
Remarks = "D0-D15 are available only for DHO900 series."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|...|D15|OFF}."
Example = ":BUS1:SPI:MISO:SOURce CHANnel2    /*Sets MISO source to CHANnel2.*/"
Class = "Bus.SPI"
Function = "miso_source"
Command = ":BUS<n>:SPI:MISO:SOURce"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15|OFF}"
Is_Query = "True"

["3.4.13.4 :BUS<n>:SPI:MOSI:SOURce"]
Syntax = ":BUS<n>:SPI:MOSI:SOURce <source> :BUS<n>:SPI:MOSI:SOURce?"
Description = "Sets or queries the MOSI source for SPI decoding."
Remarks = "D0-D15 are available only for DHO900 series."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|...|D15|OFF}."
Example = ":BUS1:SPI:MOSI:SOURce CHANnel2    /*Sets MOSI source to CHANnel2.*/"
Class = "Bus.SPI"
Function = "mosi_source"
Command = ":BUS<n>:SPI:MOSI:SOURce"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15|OFF}"
Is_Query = "True"

["3.4.13.5 :BUS<n>:SPI:POLarity"]
Syntax = ":BUS<n>:SPI:POLarity <polarity> :BUS<n>:SPI:POLarity?"
Description = "Sets or queries the polarity for SPI decoding."
Remarks = "Options: HIGH for positive, LOW for negative."
Return_Format = "Returns {HIGH|LOW}."
Example = ":BUS1:SPI:POLarity HIGH    /*Sets polarity to HIGH.*/"
Class = "Bus.SPI"
Function = "polarity"
Command = ":BUS<n>:SPI:POLarity"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{HIGH|LOW}"
Is_Query = "True"

["3.4.13.6 :BUS<n>:SPI:MISO:POLarity"]
Syntax = ":BUS<n>:SPI:MISO:POLarity <polarity> :BUS<n>:SPI:MISO:POLarity?"
Description = "Sets or queries the polarity of the MISO line."
Remarks = "Options: HIGH or LOW."
Return_Format = "Returns {HIGH|LOW}."
Example = ":BUS1:SPI:MISO:POLarity HIGH    /*Sets MISO polarity to HIGH.*/"
Class = "Bus.SPI"
Function = "miso_polarity"
Command = ":BUS<n>:SPI:MISO:POLarity"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{HIGH|LOW}"
Is_Query = "True"

["3.4.13.7 :BUS<n>:SPI:MOSI:POLarity"]
Syntax = ":BUS<n>:SPI:MOSI:POLarity <polarity> :BUS<n>:SPI:MOSI:POLarity?"
Description = "Sets or queries the polarity of the MOSI line."
Remarks = "Options: HIGH or LOW."
Return_Format = "Returns {HIGH|LOW}."
Example = ":BUS1:SPI:MOSI:POLarity HIGH    /*Sets MOSI polarity to HIGH.*/"
Class = "Bus.SPI"
Function = "mosi_polarity"
Command = ":BUS<n>:SPI:MOSI:POLarity"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{HIGH|LOW}"
Is_Query = "True"

["3.4.13.8 :BUS<n>:SPI:DBITs"]
Syntax = ":BUS<n>:SPI:DBITs <width> :BUS<n>:SPI:DBITs?"
Description = "Sets or queries the data width for SPI decoding."
Remarks = "Valid range: 4 to 32 bits."
Return_Format = "Returns an integer between 4 and 32."
Example = ":BUS1:SPI:DBITs 10    /*Sets data width to 10.*/"
Class = "Bus.SPI"
Function = "data_width"
Command = ":BUS<n>:SPI:DBITs"
Input_Min = "4"
Input_Max = "32"
Input_Values = "Integer"
Is_Query = "True"

["3.4.13.9 :BUS<n>:SPI:ENDian"]
Syntax = ":BUS<n>:SPI:ENDian <endian> :BUS<n>:SPI:ENDian?"
Description = "Sets or queries the endian order for SPI decoding."
Remarks = "Options: MSB (most significant bit first) or LSB (least significant bit first)."
Return_Format = "Returns {MSB|LSB}."
Example = ":BUS1:SPI:ENDian LSB    /*Sets endian to LSB.*/"
Class = "Bus.SPI"
Function = "endian"
Command = ":BUS<n>:SPI:ENDian"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{MSB|LSB}"
Is_Query = "True"

["3.4.13.10 :BUS<n>:SPI:MODE"]
Syntax = ":BUS<n>:SPI:MODE <mode> :BUS<n>:SPI:MODE?"
Description = "Sets or queries the decode mode for SPI decoding."
Remarks = "Options: CS for chip select mode, TIM for timeout mode."
Return_Format = "Returns {CS|TIM}."
Example = ":BUS1:SPI:MODE CS    /*Sets decode mode to CS.*/"
Class = "Bus.SPI"
Function = "mode"
Command = ":BUS<n>:SPI:MODE"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CS|TIM}"
Is_Query = "True"

["3.4.13.11 :BUS<n>:SPI:TIMeout:TIME"]
Syntax = ":BUS<n>:SPI:TIMeout:TIME <time> :BUS<n>:SPI:TIMeout:TIME?"
Description = "Sets or queries the timeout value for SPI decoding."
Remarks = "Unit: seconds. Must be > maximum clock pulse width and < idle time between frames."
Return_Format = "Returns the timeout in scientific notation."
Example = ":BUS1:SPI:TIMeout:TIME 0.000005    /*Sets timeout to 5 μs.*/"
Class = "Bus.SPI"
Function = "timeout"
Command = ":BUS<n>:SPI:TIMeout:TIME"
Input_Min = "1e-12"
Input_Max = "N/A"
Input_Values = "Float"
Is_Query = "True"

["3.4.13.12 :BUS<n>:SPI:SS:SOURce"]
Syntax = ":BUS<n>:SPI:SS:SOURce <source> :BUS<n>:SPI:SS:SOURce?"
Description = "Sets or queries the source of the CS line for SPI decoding."
Remarks = "Valid only in CS mode; DHO900 only."
Return_Format = "Returns {CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|...|D15}."
Example = ":BUS1:SPI:SS:SOURce CHANnel2    /*Sets CS source to CHANnel2.*/"
Class = "Bus.SPI"
Function = "cs_source"
Command = ":BUS<n>:SPI:SS:SOURce"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4|D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15}"
Is_Query = "True"

["3.4.13.13 :BUS<n>:SPI:SS:POLarity"]
Syntax = ":BUS<n>:SPI:SS:POLarity <polarity> :BUS<n>:SPI:SS:POLarity?"
Description = "Sets or queries the polarity of the CS line for SPI decoding."
Remarks = "Options: HIGH or LOW."
Return_Format = "Returns {HIGH|LOW}."
Example = ":BUS1:SPI:SS:POLarity HIGH    /*Sets CS polarity to HIGH.*/"
Class = "Bus.SPI"
Function = "cs_polarity"
Command = ":BUS<n>:SPI:SS:POLarity"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{HIGH|LOW}"
Is_Query = "True"

["3.4.14 :BUS<n>:CAN"]
Syntax = ":BUS<n>:CAN:SOURce <source> :BUS<n>:CAN:SOURce? :BUS<n>:CAN:STYPe <stype> :BUS<n>:CAN:STYPe? :BUS<n>:CAN:BAUD <baud> :BUS<n>:CAN:BAUD? :BUS<n>:CAN:SPOint <spoint> :BUS<n>:CAN:SPOint?"
Description = "Sets or queries CAN decoding parameters."
Remarks = "Only supported on DHO900 series. Sample point is expressed as a percentage."
Return_Format = "Returns values specific to each subcommand."
Example = ":BUS1:CAN:SOURce CHANnel2    /*Sets CAN source to CHANnel2.*/ :BUS1:CAN:STYPe TX    /*Sets CAN signal type to TX.*/ :BUS1:CAN:BAUD 120000    /*Sets baud rate.*/ :BUS1:CAN:SPOint 70    /*Sets sample point to 70%.*/"
Class = "Bus.CAN"
Function = "configure"
Command = ":BUS<n>:CAN"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "N/A"
Is_Query = "True"

["3.4.15 :BUS<n>:LIN"]
Syntax = ":BUS<n>:LIN:PARity <bool> :BUS<n>:LIN:PARity? :BUS<n>:LIN:SOURce <source> :BUS<n>:LIN:SOURce? :BUS<n>:LIN:STANdard <value> :BUS<n>:LIN:STANdard?"
Description = "Sets or queries LIN decoding parameters."
Remarks = "Only supported on DHO900 series."
Return_Format = "Returns values based on subcommands."
Example = ":BUS1:LIN:PARity ON    /*Includes parity in LIN decoding.*/ :BUS1:LIN:SOURce CHANnel2    /*Sets LIN source to CHANnel2.*/ :BUS1:LIN:STANdard V2X    /*Sets LIN version to V2X.*/"
Class = "Bus.LIN"
Function = "configure"
Command = ":BUS<n>:LIN"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "N/A"
Is_Query = "True"

["3.4.15.1 :BUS<n>:LIN:PARity"]
Syntax = ":BUS<n>:LIN:PARity <bool> :BUS<n>:LIN:PARity?"
Description = "Sets or queries whether the LIN decoding on the specified decoding bus includes the parity bit."
Remarks = "• 1|ON: includes the parity bit. • 0|OFF: does not include the parity bit."
Return_Format = "The query returns 0 or 1."
Example = ":BUS1:LIN:PARity ON    /*Sets LIN parity inclusion on.*/ :BUS1:LIN:PARity?    /*Returns 1.*/"
Class = "Bus.LIN"
Function = "parity"
Command = ":BUS<n>:LIN:PARity"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "Boolean"
Is_Query = "True"

["3.4.15.2 :BUS<n>:LIN:SOURce"]
Syntax = ":BUS<n>:LIN:SOURce <source> :BUS<n>:LIN:SOURce?"
Description = "Sets or queries the source of the LIN bus."
Remarks = "D0-D15 are only available for the DHO900 series."
Return_Format = "The query returns D0, D1, D2, D3, D4, D5, D6, D7, D8, D9, D10, D11, D12, D13, D14, D15, CHAN1, CHAN2, CHAN3, or CHAN4."
Example = ":BUS1:LIN:SOURce CHANnel2    /*Sets LIN source to CHANnel2.*/ :BUS1:LIN:SOURce?    /*Returns CHAN2.*/"
Class = "Bus.LIN"
Function = "source"
Command = ":BUS<n>:LIN:SOURce"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{D0|D1|D2|D3|D4|D5|D6|D7|D8|D9|D10|D11|D12|D13|D14|D15|CHANNEL1|CHANNEL2|CHANNEL3|CHANNEL4}"
Is_Query = "True"

["3.4.15.3 :BUS<n>:LIN:STANdard"]
Syntax = ":BUS<n>:LIN:STANdard <value> :BUS<n>:LIN:STANdard?"
Description = "Sets or queries the version of the LIN bus."
Remarks = "N/A"
Return_Format = "The query returns V1X, V2X, or MIX."
Example = ":BUS1:LIN:STANdard V2X    /*Sets LIN version to V2X.*/ :BUS1:LIN:STANdard?    /*Returns V2X.*/"
Class = "Bus.LIN"
Function = "standard"
Command = ":BUS<n>:LIN:STANdard"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{V1X|V2X|MIX}"
Is_Query = "True"

["3.4.1 :BUS<n>:MODE".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "PARallel"
Range = "{1|2|3|4} - <mode> Discrete {PARallel|RS232|SPI|IIC|LIN|CAN}"

["3.4.2 :BUS<n>:DISPlay".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "0|OFF"
Range = "{1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}}"

["3.4.3 :BUS<n>:FORMat".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "HEX"
Range = "{1|2|3|4} - <format> Discrete {HEX|ASCii|DEC|BIN}"

["3.4.4 :BUS<n>:EVENt".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "0|OFF"
Range = "{1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}}"

["3.4.5 :BUS<n>:LABel".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "1|ON"
Range = "{1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}}"

["3.4.6 :BUS<n>:DATA?".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "-"
Range = "{1|2|3|4}"

["3.4.7 :BUS<n>:EEXPort".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "-"
Range = "{1|2|3|4} - <path> ASCII String Refer to Remarks"

["3.4.8 :BUS<n>:POSition".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "0"
Range = "{1|2|3|4} - <pos> Integer -250 to 250"

["3.4.9 :BUS<n>:THReshold".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "-"
Range = "{1|2|3|4} - <value> Real (-5 x VerticalScale - OFFSet) to (5 x VerticalScale - OFFSet) 0 <type> Discrete {PAL|TX|RX|SCL|SDA|CS|CLK| MISO|MOSI|LIN|CAN|PALCLK| CH1|CH2|CH3|CH4}"

["3.4.10 :BUS<n>:PARallel".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "MIXed"
Range = "{1|2|3|4} - <source> Discrete {D7D0|D15D8|D15D0|D0D7| D8D15|D0D15|CHANnel1| CHANnel2|CHANnel3|CHANnel4| USER} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} OFF Name Type Range Default <n> Discrete {1|2|3|4} - <slope> Discrete {POSitive|NEGative|BOTH} POSitive Name Type Range Default <n> Discrete {1|2|3|4} - <wid> Integer 1 to 4 1 Name Type Range Default <n> Discrete {1|2|3|4} - <bit> Integer 0 to (data width - 1) 0 37 Name Type Range Default <n> Discrete {1|2|3|4} - <src> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} Related to the selected bit Name Type Range Default <n> Discrete {1|2|3|4} - <endian> Discrete {MSB|LSB} MSB Name Type Range Default <n> Discrete {1|2|3|4} - <pol> Discrete {NEGative|POSitive} POSitive Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} OFF Name Type Range Default <n> Discrete {1|2|3|4} - <pol> Discrete {POSitive|NEGative} NEGative Name Type Range Default <n> Discrete {1|2|3|4} - <parity> Discrete {NONE|ODD|EVEN} NONE Name Type Range Default <n> Discrete {1|2|3|4} - <endian> Discrete {MSB|LSB} LSB Name Type Range Default <n> Discrete {1|2|3|4} - <baud> Integer 1bps to 20Mbps 9600 bps Name Type Range Default <n> Discrete {1|2|3|4} - <bits> Discrete {5|6|7|8|9} 8 Name Type Range Default <n> Discrete {1|2|3|4} - <stop bits> Discrete {1|1.5|2} 1 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF Name Type Range Default <n> Discrete {1|2|3|4} - <addr> Discrete {NORMal|RW} NORMal Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <slope> Discrete {POSitive|NEGative} POSitive Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} CHANnel2 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} OFF 52 Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - 54 Name Type Range Default <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - <width> Integer 4 to 32 8 Name Type Range Default <n> Discrete {1|2|3|4} - <endian> Discrete {MSB|LSB} MSB Name Type Range Default <n> Discrete {1|2|3|4} - <mode> Discrete {CS|TIMeout} TIMeout Name Type Range Default <n> Discrete {1|2|3|4} - <time> Real 8 ns to 10 s 1μs Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel3 Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} LOW Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <stype> Discrete {TX|RX|CANH|CANL|DIFFerential} CANL Name Type Range Default <n> Discrete {1|2|3|4} - <baud> Integer 10 kbps to 5 Mbps 1 Mbps Name Type Range Default <n> Discrete {1|2|3|4} - <spoint> Integer 10 to 90 50 Name Type Range Default <n> Discrete {1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF 63 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <value> Discrete {V1X|V2X|MIXed}"

["3.4.10.1 :BUS<n>:PARallel:BUS".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CHANnel1"
Range = "{1|2|3|4} - <source> Discrete {D7D0|D15D8|D15D0|D0D7| D8D15|D0D15|CHANnel1| CHANnel2|CHANnel3|CHANnel4| USER}"

["3.4.10.2 :BUS<n>:PARallel:CLK".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "OFF"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF}"

["3.4.10.3 :BUS<n>:PARallel:SLOPe".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "POSitive"
Range = "{1|2|3|4} - <slope> Discrete {POSitive|NEGative|BOTH}"

["3.4.10.4 :BUS<n>:PARallel:WIDTh".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "1"
Range = "{1|2|3|4} - <wid> Integer 1 to 4"

["3.4.10.5 :BUS<n>:PARallel:BITX".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "37"
Range = "{1|2|3|4} - <bit> Integer 0 to (data width - 1) 0"

["3.4.10.6 :BUS<n>:PARallel:SOURce".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "bit"
Range = "{1|2|3|4} - <src> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} Related to the selected"

["3.4.10.7 :BUS<n>:PARallel:ENDian".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "MSB"
Range = "{1|2|3|4} - <endian> Discrete {MSB|LSB}"

["3.4.10.8 :BUS<n>:PARallel:POLarity".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "POSitive"
Range = "{1|2|3|4} - <pol> Discrete {NEGative|POSitive}"

["3.4.11 :BUS<n>:RS232".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "MIXed"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} OFF Name Type Range Default <n> Discrete {1|2|3|4} - <pol> Discrete {POSitive|NEGative} NEGative Name Type Range Default <n> Discrete {1|2|3|4} - <parity> Discrete {NONE|ODD|EVEN} NONE Name Type Range Default <n> Discrete {1|2|3|4} - <endian> Discrete {MSB|LSB} LSB Name Type Range Default <n> Discrete {1|2|3|4} - <baud> Integer 1bps to 20Mbps 9600 bps Name Type Range Default <n> Discrete {1|2|3|4} - <bits> Discrete {5|6|7|8|9} 8 Name Type Range Default <n> Discrete {1|2|3|4} - <stop bits> Discrete {1|1.5|2} 1 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF Name Type Range Default <n> Discrete {1|2|3|4} - <addr> Discrete {NORMal|RW} NORMal Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <slope> Discrete {POSitive|NEGative} POSitive Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} CHANnel2 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} OFF 52 Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - 54 Name Type Range Default <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - <width> Integer 4 to 32 8 Name Type Range Default <n> Discrete {1|2|3|4} - <endian> Discrete {MSB|LSB} MSB Name Type Range Default <n> Discrete {1|2|3|4} - <mode> Discrete {CS|TIMeout} TIMeout Name Type Range Default <n> Discrete {1|2|3|4} - <time> Real 8 ns to 10 s 1μs Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel3 Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} LOW Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <stype> Discrete {TX|RX|CANH|CANL|DIFFerential} CANL Name Type Range Default <n> Discrete {1|2|3|4} - <baud> Integer 10 kbps to 5 Mbps 1 Mbps Name Type Range Default <n> Discrete {1|2|3|4} - <spoint> Integer 10 to 90 50 Name Type Range Default <n> Discrete {1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF 63 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <value> Discrete {V1X|V2X|MIXed}"

["3.4.11.1 :BUS<n>:RS232:TX".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CHANnel1"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF}"

["3.4.11.2 :BUS<n>:RS232:RX".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "OFF"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF}"

["3.4.11.3 :BUS<n>:RS232:POLarity".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "NEGative"
Range = "{1|2|3|4} - <pol> Discrete {POSitive|NEGative}"

["3.4.11.4 :BUS<n>:RS232:PARity".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "NONE"
Range = "{1|2|3|4} - <parity> Discrete {NONE|ODD|EVEN}"

["3.4.11.5 :BUS<n>:RS232:ENDian".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "LSB"
Range = "{1|2|3|4} - <endian> Discrete {MSB|LSB}"

["3.4.11.6 :BUS<n>:RS232:BAUD".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "bps"
Range = "{1|2|3|4} - <baud> Integer 1bps to 20Mbps 9600"

["3.4.11.7 :BUS<n>:RS232:DBITs".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "8"
Range = "{1|2|3|4} - <bits> Discrete {5|6|7|8|9}"

["3.4.11.8 :BUS<n>:RS232:SBITs".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "1"
Range = "{1|2|3|4} - <stop bits> Discrete {1|1.5|2}"

["3.4.12 :BUS<n>:IIC".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "MIXed"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF Name Type Range Default <n> Discrete {1|2|3|4} - <addr> Discrete {NORMal|RW} NORMal Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <slope> Discrete {POSitive|NEGative} POSitive Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} CHANnel2 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} OFF 52 Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - 54 Name Type Range Default <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - <width> Integer 4 to 32 8 Name Type Range Default <n> Discrete {1|2|3|4} - <endian> Discrete {MSB|LSB} MSB Name Type Range Default <n> Discrete {1|2|3|4} - <mode> Discrete {CS|TIMeout} TIMeout Name Type Range Default <n> Discrete {1|2|3|4} - <time> Real 8 ns to 10 s 1μs Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel3 Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} LOW Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <stype> Discrete {TX|RX|CANH|CANL|DIFFerential} CANL Name Type Range Default <n> Discrete {1|2|3|4} - <baud> Integer 10 kbps to 5 Mbps 1 Mbps Name Type Range Default <n> Discrete {1|2|3|4} - <spoint> Integer 10 to 90 50 Name Type Range Default <n> Discrete {1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF 63 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <value> Discrete {V1X|V2X|MIXed}"

["3.4.12.1 :BUS<n>:IIC:SCLK:SOURce".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CHANnel1"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4}"

["3.4.12.2 :BUS<n>:IIC:SDA:SOURce".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CHANnel1"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4}"

["3.4.12.3 :BUS<n>:IIC:EXCHange".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "0|OFF"
Range = "{1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}}"

["3.4.12.4 :BUS<n>:IIC:ADDRess".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "NORMal"
Range = "{1|2|3|4} - <addr> Discrete {NORMal|RW}"

["3.4.13 :BUS<n>:SPI".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "MIXed"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <slope> Discrete {POSitive|NEGative} POSitive Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} CHANnel2 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} OFF 52 Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - 54 Name Type Range Default <polarity> Discrete {HIGH|LOW} HIGH Name Type Range Default <n> Discrete {1|2|3|4} - <width> Integer 4 to 32 8 Name Type Range Default <n> Discrete {1|2|3|4} - <endian> Discrete {MSB|LSB} MSB Name Type Range Default <n> Discrete {1|2|3|4} - <mode> Discrete {CS|TIMeout} TIMeout Name Type Range Default <n> Discrete {1|2|3|4} - <time> Real 8 ns to 10 s 1μs Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel3 Name Type Range Default <n> Discrete {1|2|3|4} - <polarity> Discrete {HIGH|LOW} LOW Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <stype> Discrete {TX|RX|CANH|CANL|DIFFerential} CANL Name Type Range Default <n> Discrete {1|2|3|4} - <baud> Integer 10 kbps to 5 Mbps 1 Mbps Name Type Range Default <n> Discrete {1|2|3|4} - <spoint> Integer 10 to 90 50 Name Type Range Default <n> Discrete {1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF 63 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <value> Discrete {V1X|V2X|MIXed}"

["3.4.13.1 :BUS<n>:SPI:SCLK:SOURce".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CHANnel1"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4}"

["3.4.13.2 :BUS<n>:SPI:SCLK:SLOPe".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "POSitive"
Range = "{1|2|3|4} - <slope> Discrete {POSitive|NEGative}"

["3.4.13.3 :BUS<n>:SPI:MISO:SOURce".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CHANnel2"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF}"

["3.4.13.4 :BUS<n>:SPI:MOSI:SOURce".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "52"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4|OFF} OFF"

["3.4.13.5 :BUS<n>:SPI:POLarity".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "HIGH"
Range = "{1|2|3|4} - <polarity> Discrete {HIGH|LOW}"

["3.4.13.6 :BUS<n>:SPI:MISO:POLarity".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "HIGH"
Range = "{1|2|3|4} - <polarity> Discrete {HIGH|LOW}"

["3.4.13.7 :BUS<n>:SPI:MOSI:POLarity".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "HIGH"
Range = "{1|2|3|4} - 54 Name Type Range Default <polarity> Discrete {HIGH|LOW}"

["3.4.13.8 :BUS<n>:SPI:DBITs".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "8"
Range = "{1|2|3|4} - <width> Integer 4 to 32"

["3.4.13.9 :BUS<n>:SPI:ENDian".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "MSB"
Range = "{1|2|3|4} - <endian> Discrete {MSB|LSB}"

["3.4.13.10 :BUS<n>:SPI:MODE".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "TIMeout"
Range = "{1|2|3|4} - <mode> Discrete {CS|TIMeout}"

["3.4.13.11 :BUS<n>:SPI:TIMeout:TIME".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "1μs"
Range = "{1|2|3|4} - <time> Real 8 ns to 10 s"

["3.4.13.12 :BUS<n>:SPI:SS:SOURce".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CHANnel3"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4}"

["3.4.13.13 :BUS<n>:SPI:SS:POLarity".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "LOW"
Range = "{1|2|3|4} - <polarity> Discrete {HIGH|LOW}"

["3.4.14 :BUS<n>:CAN".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "MIXed"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <stype> Discrete {TX|RX|CANH|CANL|DIFFerential} CANL Name Type Range Default <n> Discrete {1|2|3|4} - <baud> Integer 10 kbps to 5 Mbps 1 Mbps Name Type Range Default <n> Discrete {1|2|3|4} - <spoint> Integer 10 to 90 50 Name Type Range Default <n> Discrete {1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF 63 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <value> Discrete {V1X|V2X|MIXed}"

["3.4.14.1 :BUS<n>:CAN:SOURce".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CHANnel1"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4}"

["3.4.14.2 :BUS<n>:CAN:STYPe".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CANL"
Range = "{1|2|3|4} - <stype> Discrete {TX|RX|CANH|CANL|DIFFerential}"

["3.4.14.3 :BUS<n>:CAN:BAUD".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "Mbps"
Range = "{1|2|3|4} - <baud> Integer 10 kbps to 5 Mbps 1"

["3.4.14.4 :BUS<n>:CAN:SPOint".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "50"
Range = "{1|2|3|4} - <spoint> Integer 10 to 90"

["3.4.15 :BUS<n>:LIN".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "MIXed"
Range = "{1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF 63 Name Type Range Default <n> Discrete {1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4} CHANnel1 Name Type Range Default <n> Discrete {1|2|3|4} - <value> Discrete {V1X|V2X|MIXed}"

["3.4.15.1 :BUS<n>:LIN:PARity".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "63"
Range = "{1|2|3|4} - <bool> Bool {{1|ON}|{0|OFF}} 0|OFF"

["3.4.15.2 :BUS<n>:LIN:SOURce".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "CHANnel1"
Range = "{1|2|3|4} - <source> Discrete {D0|D1|D2|D3|D4|D5|D6|D7|D8| D9|D10|D11|D12|D13|D14|D15| CHANnel1|CHANnel2|CHANnel3| CHANnel4}"

["3.4.15.3 :BUS<n>:LIN:STANdard".Parameter]
Name = "<n>"
Type = "Discrete"
Default = "MIXed"
Range = "{1|2|3|4} - <value> Discrete {V1X|V2X|MIXed}"
