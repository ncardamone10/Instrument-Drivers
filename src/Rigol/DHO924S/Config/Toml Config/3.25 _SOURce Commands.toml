# 3.25 :SOURce Commands

["3.25.1 :SOURce:OUTPut:STATe"]
Syntax = ":SOURce:OUTPut:STATe <bool> :SOURce:OUTPut:STATe?"
Description = "Enables or disables the channel output; or queries the channel output status."
Remarks = "N/A"
"Return Format" = "The query returns 0 or 1."
Example = ":SOURce:OUTPut:STATe ON /*Enables the AFG output.*/ :SOURce:OUTPut:STATe? /*Returns 1.*/"
Class = "Source"
Function = "output_state"
Command = ":SOURce:OUTPut:STATe"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{OFF|ON}"
Is_Query = "Yes"

["3.25.2 :SOURce:FUNCtion"]
Syntax = ":SOURce:FUNCtion <wave> :SOURce:FUNCtion?"
Description = "Sets or queries the basic waveform type."
Remarks = "Waveforms include Sine, Square, Ramp, DC, Noise, and Arb."
"Return Format" = "Returns SIN, SQU, RAMP, DC, NOIS, or ARB."
Example = ":SOURce:FUNCtion SQUare /*Sets the waveform to Square.*/ :SOURce:FUNCtion? /*Returns SQU.*/"
Class = "Source"
Function = "waveform"
Command = ":SOURce:FUNCtion"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{SINusoid|SQUare|RAMP|DC|NOISe|ARB}"
Is_Query = "Yes"

["3.25.3 :SOURce:FREQuency"]
Syntax = ":SOURce:FREQuency <freq> :SOURce:FREQuency?"
Description = "Sets or queries the frequency of basic waveforms."
Remarks = "Sine: up to 25 MHz, Square: up to 15 MHz, Ramp: up to 150 kHz, Arb: up to 10 MHz, DC/Noise: no frequency."
"Return Format" = "Returns the frequency in scientific notation (e.g. 1.000000E+3 for 1 kHz)."
Example = ":SOURce:FREQuency 1000 /*Sets frequency to 1 kHz.*/ :SOURce:FREQuency? /*Returns 1.000000E+3.*/"
Class = "Source"
Function = "frequency"
Command = ":SOURce:FREQuency"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "float"
Is_Query = "Yes"

["3.25.4 :SOURce:PHASe"]
Syntax = ":SOURce:PHASe <phase> :SOURce:PHASe?"
Description = "Sets or queries the starting phase of basic waveforms."
Remarks = "0° to 360°."
"Return Format" = "Returns phase in scientific notation (degrees)."
Example = ":SOURce:PHASe 10 /*Sets start phase to 10°.*/ :SOURce:PHASe? /*Might return 1.0000000000E+01.*/"
Class = "Source"
Function = "phase"
Command = ":SOURce:PHASe"
Input_Min = "0"
Input_Max = "360"
Input_Values = "float"
Is_Query = "Yes"

["3.25.5 :SOURce:FUNCtion:RAMP:SYMMetry"]
Syntax = ":SOURce:FUNCtion:RAMP:SYMMetry <symm> :SOURce:FUNCtion:RAMP:SYMMetry?"
Description = "Sets or queries the symmetry of Ramp waveforms."
Remarks = "Available only if the waveform is set to Ramp."
"Return Format" = "Returns Ramp symmetry in scientific notation (0%-100%)."
Example = ":SOURce:FUNCtion:RAMP:SYMMetry 55 /*Sets Ramp symmetry to 55%.*/ :SOURce:FUNCtion:RAMP:SYMMetry? /*Returns 5.5000000000E+01.*/"
Class = "Source"
Function = "ramp_symmetry"
Command = ":SOURce:FUNCtion:RAMP:SYMMetry"
Input_Min = "0"
Input_Max = "100"
Input_Values = "float"
Is_Query = "Yes"

["3.25.6 :SOURce:FUNCtion:SQUare:DUYT"]
Syntax = ":SOURce:FUNCtion:SQUare:DUYT <percent> :SOURce:FUNCtion:SQUare:DUYT?"
Description = "Sets or queries the duty cycle (%) of the square wave."
Remarks = "Valid only if the waveform is set to Square."
"Return Format" = "Returns duty cycle in scientific notation."
Example = ":SOURce:FUNCtion:SQUare:DUYT 55 /*Duty cycle 55%.*/ :SOURce:FUNCtion:SQUare:DUYT? /*Returns 5.5000000000E+01.*/"
Class = "Source"
Function = "duty_cycle"
Command = ":SOURce:FUNCtion:SQUare:DUYT"
Input_Min = "0"
Input_Max = "100"
Input_Values = "float"
Is_Query = "Yes"

["3.25.7 :SOURce:VOLTage:AMPLitude"]
Syntax = ":SOURce:VOLTage:AMPLitude <amp> :SOURce:VOLTage:AMPLitude?"
Description = "Sets or queries the amplitude of the basic waveform (V)."
Remarks = "Amplitude range depends on frequency (up to 10 V if ≤10 MHz, or 5 V if >10 MHz)."
"Return Format" = "Returns amplitude in scientific notation (V)."
Example = ":SOURce:VOLTage:AMPLitude 1 /*Sets amplitude to 1 V.*/ :SOURce:VOLTage:AMPLitude? /*Returns 1.0000000000E+00.*/"
Class = "Source"
Function = "amplitude"
Command = ":SOURce:VOLTage:AMPLitude"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "float"
Is_Query = "Yes"

["3.25.8 :SOURce:VOLTage:OFFSet"]
Syntax = ":SOURce:VOLTage:OFFSet <offset> :SOURce:VOLTage:OFFSet?"
Description = "Sets or queries the waveform offset (V)."
Remarks = "Offset range depends on amplitude and frequency (see example in remarks)."
"Return Format" = "Returns offset in scientific notation (V)."
Example = ":SOURce:VOLTage:OFFSet 0.2 /*Sets offset to 0.2 V.*/ :SOURce:VOLTage:OFFSet? /*Might return 2.0000000000E-01.*/"
Class = "Source"
Function = "dc_offset"
Command = ":SOURce:VOLTage:OFFSet"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "float"
Is_Query = "Yes"

["3.25.9 :SOURce:MOD:STATe"]
Syntax = ":SOURce:MOD:STATe <bool> :SOURce:MOD:STATe?"
Description = "Enables or disables the modulation output; or queries the modulation output status."
Remarks = "N/A"
"Return Format" = "Returns 1 or 0."
Example = ":SOURce:MOD:STATe ON /*Enables modulation output.*/ :SOURce:MOD:STATe? /*Might return 1.*/"
Class = "Source.Modulation"
Function = "state"
Command = ":SOURce:MOD:STATe"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{OFF|ON}"
Is_Query = "Yes"

["3.25.10 :SOURce:MOD:TYPe"]
Syntax = ":SOURce:MOD:TYPe <type> :SOURce:MOD:TYPe?"
Description = "Sets or queries the modulation type (AM, FM, or PM)."
Remarks = "N/A"
"Return Format" = "Returns AM, FM, or PM."
Example = ":SOURce:MOD:TYPe AM /*Sets modulation to AM.*/ :SOURce:MOD:TYPe? /*Returns AM.*/"
Class = "Source.Modulation"
Function = "type"
Command = ":SOURce:MOD:TYPe"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{AM|FM|PM}"
Is_Query = "Yes"

["3.25.11 :SOURce:MOD:AM:DEPTh"]
Syntax = ":SOURce:MOD:AM:DEPTh <depth> :SOURce:MOD:AM:DEPTh?"
Description = "Sets or queries the modulation depth of AM."
Remarks = "At >100% depth, envelope distortion occurs."
"Return Format" = "Returns AM depth in scientific notation (percent)."
Example = ":SOURce:MOD:AM:DEPTh 50 /*Sets AM depth to 50%.*/ :SOURce:MOD:AM:DEPTh? /*Might return 5.0000000000E+01.*/"
Class = "Source.Modulation.AM"
Function = "modulation_index"
Command = ":SOURce:MOD:AM:DEPTh"
Input_Min = "0"
Input_Max = "100"
Input_Values = "float"
Is_Query = "Yes"

["3.25.12 :SOURce:MOD:AM:INTernal:FREQuency"]
Syntax = ":SOURce:MOD:AM:INTernal:FREQuency <freq> :SOURce:MOD:AM:INTernal:FREQuency?"
Description = "Sets or queries the internal modulation frequency of AM."
Remarks = "2 mHz to 1 MHz typical."
"Return Format" = "Returns frequency in scientific notation (Hz)."
Example = ":SOURce:MOD:AM:INTernal:FREQuency 150 /*Sets to 150 Hz.*/ :SOURce:MOD:AM:INTernal:FREQuency? /*Might return 1.5000000000E+02.*/"
Class = "Source.Modulation.AM"
Function = "baseband_freq"
Command = ":SOURce:MOD:AM:INTernal:FREQuency"
Input_Min = "2e-3"
Input_Max = "1e6"
Input_Values = "float"
Is_Query = "Yes"

["3.25.13 :SOURce:MOD:AM:INTernal:FUNCtion"]
Syntax = ":SOURce:MOD:AM:INTernal:FUNCtion <function> :SOURce:MOD:AM:INTernal:FUNCtion?"
Description = "Sets or queries the modulation waveform for AM (SIN, SQU, TRI, UPR, DNR, NOISe)."
Remarks = "N/A"
"Return Format" = "Returns SIN, SQU, TRI, UPR, DNR, or NOIS."
Example = ":SOURce:MOD:AM:INTernal:FUNCtion SQUare /*AM mod waveform = Square*/ :SOURce:MOD:AM:INTernal:FUNCtion? /*Returns SQU.*/"
Class = "Source.Modulation.AM"
Function = "baseband_waveform"
Command = ":SOURce:MOD:AM:INTernal:FUNCtion"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{SINusoid|SQUare|TRIangle|UPRamp|DNRamp|NOISe}"
Is_Query = "Yes"

["3.25.14 :SOURce:MOD:FM:DEViation"]
Syntax = ":SOURce:MOD:FM:DEViation <deviation> :SOURce:MOD:FM:DEViation?"
Description = "Sets or queries the frequency deviation of FM."
Remarks = "Carrier frequency + deviation ≤ (max freq + 1 kHz)."
"Return Format" = "Returns deviation in scientific notation (Hz)."
Example = ":SOURce:MOD:FM:DEViation 100 /*Sets FM deviation to 100 Hz.*/ :SOURce:MOD:FM:DEViation? /*Might return 1.0000000000E+02.*/"
Class = "Source.Modulation.FM"
Function = "modulation_index"
Command = ":SOURce:MOD:FM:DEViation"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "float"
Is_Query = "Yes"

["3.25.15 :SOURce:MOD:FM:INTernal:FREQuency"]
Syntax = ":SOURce:MOD:FM:INTernal:FREQuency <freq> :SOURce:MOD:FM:INTernal:FREQuency?"
Description = "Sets or queries the internal modulation frequency of FM."
Remarks = "2 mHz to 1 MHz typical."
"Return Format" = "Returns frequency in scientific notation (Hz)."
Example = ":SOURce:MOD:FM:INTernal:FREQuency 150 /*Sets FM internal freq to 150 Hz.*/ :SOURce:MOD:FM:INTernal:FREQuency? /*Returns 1.5000000000E+02.*/"
Class = "Source.Modulation.FM"
Function = "baseband_freq"
Command = ":SOURce:MOD:FM:INTernal:FREQuency"
Input_Min = "2e-3"
Input_Max = "1e6"
Input_Values = "float"
Is_Query = "Yes"

["3.25.16 :SOURce:MOD:FM:INTernal:FUNCtion"]
Syntax = ":SOURce:MOD:FM:INTernal:FUNCtion <function> :SOURce:MOD:FM:INTernal:FUNCtion?"
Description = "Sets or queries the modulation waveform of FM."
Remarks = "SINusoid, SQUare, TRIangle, UPRamp, DNRamp, or NOISe."
"Return Format" = "Returns SIN, SQU, TRI, UPR, DNR, or NOIS."
Example = ":SOURce:MOD:FM:INTernal:FUNCtion SQUare /*FM mod waveform = Square*/ :SOURce:MOD:FM:INTernal:FUNCtion? /*Returns SQU.*/"
Class = "Source.Modulation.FM"
Function = "baseband_waveform"
Command = ":SOURce:MOD:FM:INTernal:FUNCtion"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{SINusoid|SQUare|TRIangle|UPRamp|DNRamp|NOISe}"
Is_Query = "Yes"

["3.25.17 :SOURce:MOD:PM:DEViation"]
Syntax = ":SOURce:MOD:PM:DEViation <deviation> :SOURce:MOD:PM:DEViation?"
Description = "Sets or queries the phase deviation of PM."
Remarks = "Peak deviation in degrees from the carrier."
"Return Format" = "Returns phase deviation in scientific notation (degrees)."
Example = ":SOURce:MOD:PM:DEViation 50 /*PM deviation 50°.*/ :SOURce:MOD:PM:DEViation? /*Might return 5.0000000000E+01.*/"
Class = "Source.Modulation.PM"
Function = "modulation_index"
Command = ":SOURce:MOD:PM:DEViation"
Input_Min = "0"
Input_Max = "360"
Input_Values = "float"
Is_Query = "Yes"

["3.25.18 :SOURce:MOD:PM:INTernal:FREQuency"]
Syntax = ":SOURce:MOD:PM:INTernal:FREQuency <freq> :SOURce:MOD:PM:INTernal:FREQuency?"
Description = "Sets or queries the internal modulation frequency of PM."
Remarks = "N/A"
"Return Format" = "Returns frequency in scientific notation (Hz)."
Example = ":SOURce:MOD:PM:INTernal:FREQuency 150 /*PM internal freq 150 Hz.*/ :SOURce:MOD:PM:INTernal:FREQuency? /*Returns 1.5000000000E+02.*/"
Class = "Source.Modulation.PM"
Function = "baseband_freq"
Command = ":SOURce:MOD:PM:INTernal:FREQuency"
Input_Min = "2e-3"
Input_Max = "1e6"
Input_Values = "float"
Is_Query = "Yes"

["3.25.19 :SOURce:MOD:PM:INTernal:FUNCtion"]
Syntax = ":SOURce:MOD:PM:INTernal:FUNCtion <function> :SOURce:MOD:PM:INTernal:FUNCtion?"
Description = "Sets or queries the modulation waveform of PM."
Remarks = "SINusoid, SQUare, TRIangle, UPRamp, DNRamp, or NOISe."
"Return Format" = "Returns SIN, SQU, TRI, UPR, DNR, or NOIS."
Example = ":SOURce:MOD:PM:INTernal:FUNCtion SQUare /*PM mod waveform = Square.*/ :SOURce:MOD:PM:INTernal:FUNCtion? /*Returns SQU.*/"
Class = "Source.Modulation.PM"
Function = "baseband_waveform"
Command = ":SOURce:MOD:PM:INTernal:FUNCtion"
Input_Min = "N/A"
Input_Max = "N/A"
Input_Values = "{SINusoid|SQUare|TRIangle|UPRamp|DNRamp|NOISe}"
Is_Query = "Yes"

["3.25.1 :SOURce:OUTPut:STATe".Parameter]
Name = "<bool>"
Type = "Bool"
Default = "0|OFF"
Range = "{{1|ON}|{0|OFF}}"

["3.25.2 :SOURce:FUNCtion".Parameter]
Name = "<wave>"
Type = "Discrete"
Default = "SINusoid"
Range = "{SINusoid|SQUare|RAMP|DC| NOISe|ARB}"

["3.25.3 :SOURce:FREQuency".Parameter]
Name = "<freq>"
Type = "float"
Default = "kHz"
Range = "Refer to Remarks 1"

["3.25.4 :SOURce:PHASe".Parameter]
Name = "<phase>"
Type = "float"
Default = "0°"
Range = "0° to 360°"

["3.25.5 :SOURce:FUNCtion:RAMP:SYMMetry".Parameter]
Name = "<symm>"
Type = "float"
Default = "50%"
Range = "0% to 100%"

["3.25.6 :SOURce:FUNCtion:SQUare:DUYT".Parameter]
Name = "<percent>"
Type = "float"
Default = "50"
Range = "0 to 100"

["3.25.7 :SOURce:VOLTage:AMPLitude".Parameter]
Name = "<amp>"
Type = "float"
Default = "V"
Range = "Refer to Remarks 6"

["3.25.8 :SOURce:VOLTage:OFFSet".Parameter]
Name = "<offset>"
Type = "float"
Default = "V"
Range = "Refer to Remarks 0"

["3.25.9 :SOURce:MOD:STATe".Parameter]
Name = "<bool>"
Type = "Bool"
Default = "0|OFF"
Range = "{{1|ON}|{0|OFF}}"

["3.25.10 :SOURce:MOD:TYPe".Parameter]
Name = "<type>"
Type = "Discrete"
Default = "AM"
Range = "{AM|FM|PM}"

["3.25.11 :SOURce:MOD:AM:DEPTh".Parameter]
Name = "<depth>"
Type = "float"
Default = "100%"
Range = "0% to 120%"

["3.25.12 :SOURce:MOD:AM:INTernal:FREQuency".Parameter]
Name = "<freq>"
Type = "float"
Default = "Hz"
Range = "2 mHz to 1 MHz 100"

["3.25.13 :SOURce:MOD:AM:INTernal:FUNCtion".Parameter]
Name = "<function>"
Type = "Discrete"
Default = "SINusoid"
Range = "{SINusoid|SQUare|TRIangle| UPRamp|DNRamp|NOISe}"

["3.25.14 :SOURce:MOD:FM:DEViation".Parameter]
Name = "<deviation>"
Type = "float"
Default = "kHz"
Range = "2 mHz to the current carrier frequency 1"

["3.25.15 :SOURce:MOD:FM:INTernal:FREQuency".Parameter]
Name = "<freq>"
Type = "float"
Default = "Hz"
Range = "2 mHz to 1 MHz 100"

["3.25.16 :SOURce:MOD:FM:INTernal:FUNCtion".Parameter]
Name = "<function>"
Type = "Discrete"
Default = "SINusoid"
Range = "{SINusoid|SQUare|TRIangle| UPRamp|DNRamp|NOISe}"

["3.25.17 :SOURce:MOD:PM:DEViation".Parameter]
Name = "<deviation>"
Type = "float"
Default = "90°"
Range = "0° to 360°"

["3.25.18 :SOURce:MOD:PM:INTernal:FREQuency".Parameter]
Name = "<freq>"
Type = "float"
Default = "Hz"
Range = "2 mHz to 1 MHz 100"

["3.25.19 :SOURce:MOD:PM:INTernal:FUNCtion".Parameter]
Name = "<function>"
Type = "Discrete"
Default = "SINusoid"
Range = "{SINusoid|SQUare|TRIangle| UPRamp|DNRamp|NOISe}"
